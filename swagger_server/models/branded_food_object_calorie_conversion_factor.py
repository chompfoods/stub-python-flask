# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class BrandedFoodObjectCalorieConversionFactor(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, protein_value: float=None, fat_value: float=None, carbohydrate_value: float=None):  # noqa: E501
        """BrandedFoodObjectCalorieConversionFactor - a model defined in Swagger

        :param protein_value: The protein_value of this BrandedFoodObjectCalorieConversionFactor.  # noqa: E501
        :type protein_value: float
        :param fat_value: The fat_value of this BrandedFoodObjectCalorieConversionFactor.  # noqa: E501
        :type fat_value: float
        :param carbohydrate_value: The carbohydrate_value of this BrandedFoodObjectCalorieConversionFactor.  # noqa: E501
        :type carbohydrate_value: float
        """
        self.swagger_types = {
            'protein_value': float,
            'fat_value': float,
            'carbohydrate_value': float
        }

        self.attribute_map = {
            'protein_value': 'protein_value',
            'fat_value': 'fat_value',
            'carbohydrate_value': 'carbohydrate_value'
        }
        self._protein_value = protein_value
        self._fat_value = fat_value
        self._carbohydrate_value = carbohydrate_value

    @classmethod
    def from_dict(cls, dikt) -> 'BrandedFoodObjectCalorieConversionFactor':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BrandedFoodObject_calorie_conversion_factor of this BrandedFoodObjectCalorieConversionFactor.  # noqa: E501
        :rtype: BrandedFoodObjectCalorieConversionFactor
        """
        return util.deserialize_model(dikt, cls)

    @property
    def protein_value(self) -> float:
        """Gets the protein_value of this BrandedFoodObjectCalorieConversionFactor.

        The multiplication factor for protein  # noqa: E501

        :return: The protein_value of this BrandedFoodObjectCalorieConversionFactor.
        :rtype: float
        """
        return self._protein_value

    @protein_value.setter
    def protein_value(self, protein_value: float):
        """Sets the protein_value of this BrandedFoodObjectCalorieConversionFactor.

        The multiplication factor for protein  # noqa: E501

        :param protein_value: The protein_value of this BrandedFoodObjectCalorieConversionFactor.
        :type protein_value: float
        """

        self._protein_value = protein_value

    @property
    def fat_value(self) -> float:
        """Gets the fat_value of this BrandedFoodObjectCalorieConversionFactor.

        The multiplication factor for fat  # noqa: E501

        :return: The fat_value of this BrandedFoodObjectCalorieConversionFactor.
        :rtype: float
        """
        return self._fat_value

    @fat_value.setter
    def fat_value(self, fat_value: float):
        """Sets the fat_value of this BrandedFoodObjectCalorieConversionFactor.

        The multiplication factor for fat  # noqa: E501

        :param fat_value: The fat_value of this BrandedFoodObjectCalorieConversionFactor.
        :type fat_value: float
        """

        self._fat_value = fat_value

    @property
    def carbohydrate_value(self) -> float:
        """Gets the carbohydrate_value of this BrandedFoodObjectCalorieConversionFactor.

        The multiplication factor for carbohydrates  # noqa: E501

        :return: The carbohydrate_value of this BrandedFoodObjectCalorieConversionFactor.
        :rtype: float
        """
        return self._carbohydrate_value

    @carbohydrate_value.setter
    def carbohydrate_value(self, carbohydrate_value: float):
        """Sets the carbohydrate_value of this BrandedFoodObjectCalorieConversionFactor.

        The multiplication factor for carbohydrates  # noqa: E501

        :param carbohydrate_value: The carbohydrate_value of this BrandedFoodObjectCalorieConversionFactor.
        :type carbohydrate_value: float
        """

        self._carbohydrate_value = carbohydrate_value
