# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class RecipeObjectAttributes(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, prep_time: str=None, total_time: str=None, servings: str=None, serving_size: str=None):  # noqa: E501
        """RecipeObjectAttributes - a model defined in Swagger

        :param prep_time: The prep_time of this RecipeObjectAttributes.  # noqa: E501
        :type prep_time: str
        :param total_time: The total_time of this RecipeObjectAttributes.  # noqa: E501
        :type total_time: str
        :param servings: The servings of this RecipeObjectAttributes.  # noqa: E501
        :type servings: str
        :param serving_size: The serving_size of this RecipeObjectAttributes.  # noqa: E501
        :type serving_size: str
        """
        self.swagger_types = {
            'prep_time': str,
            'total_time': str,
            'servings': str,
            'serving_size': str
        }

        self.attribute_map = {
            'prep_time': 'prep_time',
            'total_time': 'total_time',
            'servings': 'servings',
            'serving_size': 'serving_size'
        }
        self._prep_time = prep_time
        self._total_time = total_time
        self._servings = servings
        self._serving_size = serving_size

    @classmethod
    def from_dict(cls, dikt) -> 'RecipeObjectAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RecipeObject_attributes of this RecipeObjectAttributes.  # noqa: E501
        :rtype: RecipeObjectAttributes
        """
        return util.deserialize_model(dikt, cls)

    @property
    def prep_time(self) -> str:
        """Gets the prep_time of this RecipeObjectAttributes.

        The time it takes to prep this recipe  # noqa: E501

        :return: The prep_time of this RecipeObjectAttributes.
        :rtype: str
        """
        return self._prep_time

    @prep_time.setter
    def prep_time(self, prep_time: str):
        """Sets the prep_time of this RecipeObjectAttributes.

        The time it takes to prep this recipe  # noqa: E501

        :param prep_time: The prep_time of this RecipeObjectAttributes.
        :type prep_time: str
        """

        self._prep_time = prep_time

    @property
    def total_time(self) -> str:
        """Gets the total_time of this RecipeObjectAttributes.

        The total time it takes to make this recipe  # noqa: E501

        :return: The total_time of this RecipeObjectAttributes.
        :rtype: str
        """
        return self._total_time

    @total_time.setter
    def total_time(self, total_time: str):
        """Sets the total_time of this RecipeObjectAttributes.

        The total time it takes to make this recipe  # noqa: E501

        :param total_time: The total_time of this RecipeObjectAttributes.
        :type total_time: str
        """

        self._total_time = total_time

    @property
    def servings(self) -> str:
        """Gets the servings of this RecipeObjectAttributes.

        The number of servings this recipe makes  # noqa: E501

        :return: The servings of this RecipeObjectAttributes.
        :rtype: str
        """
        return self._servings

    @servings.setter
    def servings(self, servings: str):
        """Sets the servings of this RecipeObjectAttributes.

        The number of servings this recipe makes  # noqa: E501

        :param servings: The servings of this RecipeObjectAttributes.
        :type servings: str
        """

        self._servings = servings

    @property
    def serving_size(self) -> str:
        """Gets the serving_size of this RecipeObjectAttributes.

        The size of each serving  # noqa: E501

        :return: The serving_size of this RecipeObjectAttributes.
        :rtype: str
        """
        return self._serving_size

    @serving_size.setter
    def serving_size(self, serving_size: str):
        """Sets the serving_size of this RecipeObjectAttributes.

        The size of each serving  # noqa: E501

        :param serving_size: The serving_size of this RecipeObjectAttributes.
        :type serving_size: str
        """

        self._serving_size = serving_size
