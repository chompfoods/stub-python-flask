# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class RecipeObjectMetaImages(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, extra_large: str=None, large: str=None, standard: str=None, grid_view: str=None, small: str=None, thumbnail: str=None, extra_small: str=None):  # noqa: E501
        """RecipeObjectMetaImages - a model defined in Swagger

        :param extra_large: The extra_large of this RecipeObjectMetaImages.  # noqa: E501
        :type extra_large: str
        :param large: The large of this RecipeObjectMetaImages.  # noqa: E501
        :type large: str
        :param standard: The standard of this RecipeObjectMetaImages.  # noqa: E501
        :type standard: str
        :param grid_view: The grid_view of this RecipeObjectMetaImages.  # noqa: E501
        :type grid_view: str
        :param small: The small of this RecipeObjectMetaImages.  # noqa: E501
        :type small: str
        :param thumbnail: The thumbnail of this RecipeObjectMetaImages.  # noqa: E501
        :type thumbnail: str
        :param extra_small: The extra_small of this RecipeObjectMetaImages.  # noqa: E501
        :type extra_small: str
        """
        self.swagger_types = {
            'extra_large': str,
            'large': str,
            'standard': str,
            'grid_view': str,
            'small': str,
            'thumbnail': str,
            'extra_small': str
        }

        self.attribute_map = {
            'extra_large': 'extra_large',
            'large': 'large',
            'standard': 'standard',
            'grid_view': 'grid_view',
            'small': 'small',
            'thumbnail': 'thumbnail',
            'extra_small': 'extra_small'
        }
        self._extra_large = extra_large
        self._large = large
        self._standard = standard
        self._grid_view = grid_view
        self._small = small
        self._thumbnail = thumbnail
        self._extra_small = extra_small

    @classmethod
    def from_dict(cls, dikt) -> 'RecipeObjectMetaImages':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RecipeObject_meta_images of this RecipeObjectMetaImages.  # noqa: E501
        :rtype: RecipeObjectMetaImages
        """
        return util.deserialize_model(dikt, cls)

    @property
    def extra_large(self) -> str:
        """Gets the extra_large of this RecipeObjectMetaImages.

        Extra large recipe image  # noqa: E501

        :return: The extra_large of this RecipeObjectMetaImages.
        :rtype: str
        """
        return self._extra_large

    @extra_large.setter
    def extra_large(self, extra_large: str):
        """Sets the extra_large of this RecipeObjectMetaImages.

        Extra large recipe image  # noqa: E501

        :param extra_large: The extra_large of this RecipeObjectMetaImages.
        :type extra_large: str
        """

        self._extra_large = extra_large

    @property
    def large(self) -> str:
        """Gets the large of this RecipeObjectMetaImages.

        Large recipe image  # noqa: E501

        :return: The large of this RecipeObjectMetaImages.
        :rtype: str
        """
        return self._large

    @large.setter
    def large(self, large: str):
        """Sets the large of this RecipeObjectMetaImages.

        Large recipe image  # noqa: E501

        :param large: The large of this RecipeObjectMetaImages.
        :type large: str
        """

        self._large = large

    @property
    def standard(self) -> str:
        """Gets the standard of this RecipeObjectMetaImages.

        Standard recipe image  # noqa: E501

        :return: The standard of this RecipeObjectMetaImages.
        :rtype: str
        """
        return self._standard

    @standard.setter
    def standard(self, standard: str):
        """Sets the standard of this RecipeObjectMetaImages.

        Standard recipe image  # noqa: E501

        :param standard: The standard of this RecipeObjectMetaImages.
        :type standard: str
        """

        self._standard = standard

    @property
    def grid_view(self) -> str:
        """Gets the grid_view of this RecipeObjectMetaImages.

        Grid view recipe image  # noqa: E501

        :return: The grid_view of this RecipeObjectMetaImages.
        :rtype: str
        """
        return self._grid_view

    @grid_view.setter
    def grid_view(self, grid_view: str):
        """Sets the grid_view of this RecipeObjectMetaImages.

        Grid view recipe image  # noqa: E501

        :param grid_view: The grid_view of this RecipeObjectMetaImages.
        :type grid_view: str
        """

        self._grid_view = grid_view

    @property
    def small(self) -> str:
        """Gets the small of this RecipeObjectMetaImages.

        Small recipe image  # noqa: E501

        :return: The small of this RecipeObjectMetaImages.
        :rtype: str
        """
        return self._small

    @small.setter
    def small(self, small: str):
        """Sets the small of this RecipeObjectMetaImages.

        Small recipe image  # noqa: E501

        :param small: The small of this RecipeObjectMetaImages.
        :type small: str
        """

        self._small = small

    @property
    def thumbnail(self) -> str:
        """Gets the thumbnail of this RecipeObjectMetaImages.

        Thumbnail recipe image  # noqa: E501

        :return: The thumbnail of this RecipeObjectMetaImages.
        :rtype: str
        """
        return self._thumbnail

    @thumbnail.setter
    def thumbnail(self, thumbnail: str):
        """Sets the thumbnail of this RecipeObjectMetaImages.

        Thumbnail recipe image  # noqa: E501

        :param thumbnail: The thumbnail of this RecipeObjectMetaImages.
        :type thumbnail: str
        """

        self._thumbnail = thumbnail

    @property
    def extra_small(self) -> str:
        """Gets the extra_small of this RecipeObjectMetaImages.

        Extra small recipe image  # noqa: E501

        :return: The extra_small of this RecipeObjectMetaImages.
        :rtype: str
        """
        return self._extra_small

    @extra_small.setter
    def extra_small(self, extra_small: str):
        """Sets the extra_small of this RecipeObjectMetaImages.

        Extra small recipe image  # noqa: E501

        :param extra_small: The extra_small of this RecipeObjectMetaImages.
        :type extra_small: str
        """

        self._extra_small = extra_small
