# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.branded_food_object_diet_labels_gluten_free import BrandedFoodObjectDietLabelsGlutenFree  # noqa: F401,E501
from swagger_server.models.branded_food_object_diet_labels_vegan import BrandedFoodObjectDietLabelsVegan  # noqa: F401,E501
from swagger_server.models.branded_food_object_diet_labels_vegetarian import BrandedFoodObjectDietLabelsVegetarian  # noqa: F401,E501
from swagger_server import util


class BrandedFoodObjectDietLabels(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, vegan: BrandedFoodObjectDietLabelsVegan=None, vegetarian: BrandedFoodObjectDietLabelsVegetarian=None, gluten_free: BrandedFoodObjectDietLabelsGlutenFree=None):  # noqa: E501
        """BrandedFoodObjectDietLabels - a model defined in Swagger

        :param vegan: The vegan of this BrandedFoodObjectDietLabels.  # noqa: E501
        :type vegan: BrandedFoodObjectDietLabelsVegan
        :param vegetarian: The vegetarian of this BrandedFoodObjectDietLabels.  # noqa: E501
        :type vegetarian: BrandedFoodObjectDietLabelsVegetarian
        :param gluten_free: The gluten_free of this BrandedFoodObjectDietLabels.  # noqa: E501
        :type gluten_free: BrandedFoodObjectDietLabelsGlutenFree
        """
        self.swagger_types = {
            'vegan': BrandedFoodObjectDietLabelsVegan,
            'vegetarian': BrandedFoodObjectDietLabelsVegetarian,
            'gluten_free': BrandedFoodObjectDietLabelsGlutenFree
        }

        self.attribute_map = {
            'vegan': 'vegan',
            'vegetarian': 'vegetarian',
            'gluten_free': 'gluten_free'
        }
        self._vegan = vegan
        self._vegetarian = vegetarian
        self._gluten_free = gluten_free

    @classmethod
    def from_dict(cls, dikt) -> 'BrandedFoodObjectDietLabels':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BrandedFoodObject_diet_labels of this BrandedFoodObjectDietLabels.  # noqa: E501
        :rtype: BrandedFoodObjectDietLabels
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vegan(self) -> BrandedFoodObjectDietLabelsVegan:
        """Gets the vegan of this BrandedFoodObjectDietLabels.


        :return: The vegan of this BrandedFoodObjectDietLabels.
        :rtype: BrandedFoodObjectDietLabelsVegan
        """
        return self._vegan

    @vegan.setter
    def vegan(self, vegan: BrandedFoodObjectDietLabelsVegan):
        """Sets the vegan of this BrandedFoodObjectDietLabels.


        :param vegan: The vegan of this BrandedFoodObjectDietLabels.
        :type vegan: BrandedFoodObjectDietLabelsVegan
        """

        self._vegan = vegan

    @property
    def vegetarian(self) -> BrandedFoodObjectDietLabelsVegetarian:
        """Gets the vegetarian of this BrandedFoodObjectDietLabels.


        :return: The vegetarian of this BrandedFoodObjectDietLabels.
        :rtype: BrandedFoodObjectDietLabelsVegetarian
        """
        return self._vegetarian

    @vegetarian.setter
    def vegetarian(self, vegetarian: BrandedFoodObjectDietLabelsVegetarian):
        """Sets the vegetarian of this BrandedFoodObjectDietLabels.


        :param vegetarian: The vegetarian of this BrandedFoodObjectDietLabels.
        :type vegetarian: BrandedFoodObjectDietLabelsVegetarian
        """

        self._vegetarian = vegetarian

    @property
    def gluten_free(self) -> BrandedFoodObjectDietLabelsGlutenFree:
        """Gets the gluten_free of this BrandedFoodObjectDietLabels.


        :return: The gluten_free of this BrandedFoodObjectDietLabels.
        :rtype: BrandedFoodObjectDietLabelsGlutenFree
        """
        return self._gluten_free

    @gluten_free.setter
    def gluten_free(self, gluten_free: BrandedFoodObjectDietLabelsGlutenFree):
        """Sets the gluten_free of this BrandedFoodObjectDietLabels.


        :param gluten_free: The gluten_free of this BrandedFoodObjectDietLabels.
        :type gluten_free: BrandedFoodObjectDietLabelsGlutenFree
        """

        self._gluten_free = gluten_free
